<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Pawel Sobala</title>
    <link>/blog/</link>
    <description>Recent content in Blog on Pawel Sobala</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 31 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Thoughts on using the pins package</title>
      <link>/blog/thoughts-on-using-the-pins-package/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/thoughts-on-using-the-pins-package/</guid>
      <description>body {text-align: justify}Today while reading a great post on IPO returns and in general IPO exploration on the Reproducible Finance blog, I have stumbled upon a pins package which I never heard of. I instantly loved the concepts that this package presents to its users. In the following, I am not going to write about how to install the package and about many use cases. I will focus on my thoughts on using this package and simple use cases.</description>
    </item>
    
    <item>
      <title>Viewing source code for a function</title>
      <link>/blog/viewing-source-code-for-a-function/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/viewing-source-code-for-a-function/</guid>
      <description>RationaleYesterday, I wanted to take a look at the source code of cor.test() function in R. I did what I usually do in such case - namely, I called the function and I expected to see the code straight way.
cor.test## function (x, ...) ## UseMethod(&amp;quot;cor.test&amp;quot;)## &amp;lt;bytecode: 0x000000001463dcb8&amp;gt;## &amp;lt;environment: namespace:stats&amp;gt;Unfortunately, I didn’t get the code but instead I recieved information that it comes from a S3 generic function.</description>
    </item>
    
    <item>
      <title>Updating R to 4.0.0 - challenges</title>
      <link>/blog/updating-r-to-4-0-0-challenges/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/updating-r-to-4-0-0-challenges/</guid>
      <description>body {text-align: justify}New R Version!On the April, 24th a new R version was released - version 4.0.0. The complete list of changes/bug fixes/etc. in the newest version is available here. In my opinion, following changes are the most crucial ones:
A new syntax is offered for specifying _raw_ character constants similar to the one used in C++, where r ... can be used to define a literal string.</description>
    </item>
    
    <item>
      <title>Calculating YTD return of EM curencies</title>
      <link>/blog/analysis-of-em-curencies/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/analysis-of-em-curencies/</guid>
      <description>body {text-align: justify}IntroductionThe goal of this short article is to calcuate the returns of Emerging Markets (EM) currencies in 2020.The main observation is that all of those currencies since mid-Febraury 2020 (Coronavirus 2020 Financial Crisis) significantly weakened in comparison to EUR or USD.The question is also, was there any curency that performed better in EUR than in USD?
Specification of CurrenciesThe currencies that are going to be analyzed as a part of this analysis has been chosen arbitrarly.</description>
    </item>
    
    <item>
      <title>New Section - &#39;Books&#39;</title>
      <link>/blog/new-section-books/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/new-section-books/</guid>
      <description>I added to the blog a new section called “Books” - available from the toolbar above. Currently, there are books/articles that are related to programming or to different tools that can be used in R. I read those books/articles and I recommend them. This section will be updated step by step. In the future most likely by books that are related to programming in Python/Julia.If you know about any other interesting books about programming in R, please let me know in comments.</description>
    </item>
    
    <item>
      <title>How to find packages on CRAN from RStudio</title>
      <link>/blog/how-to-find-packages-on-cran-from-rstudio/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/how-to-find-packages-on-cran-from-rstudio/</guid>
      <description>body {text-align: justify}MotivationWhen writing a new blog post on the assessment of the quality of fitted Self-Organizing Map (SOM) to the data I stumbled upon a problem on how to find all R packages that are related to a particular subject on CRAN. In particular, my problem was to find all packages that might contain any items related to the assessment of SOM.
Librarian PackageAfter goggling for a while I found the library(librarian) package which contains a function browse_cran() to search package names and descriptions within CRAN.</description>
    </item>
    
    <item>
      <title>Creating quickly a R Package</title>
      <link>/blog/creating-quickly-a-r-package/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/creating-quickly-a-r-package/</guid>
      <description>body {text-align: justify}MotivationFor my next post on Self Organizing Maps I started researching different ways on how to determine the quality of a map. Firstly, I found this article entitled “Evaluating Self-Organizing Map Quality Measures as Convergence Criteria”, which contains a couple of different measures on approaching the problem. Alongside it, I found R code in this thesis, which was used in the aforementioned article.</description>
    </item>
    
    <item>
      <title>Self Organizing Map for WSE</title>
      <link>/blog/self-organizing-map-wse/</link>
      <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/self-organizing-map-wse/</guid>
      <description>body {text-align: justify}This is a first post from a series of articles on Self Organizing Maps (SOM). The next post will cover the topic regarding analyzing the SOM and its quality.
IntroductionThe purpose of this short article is to create a Self Organizing Map (SOM) using the Kohonen R package, which could help understand the whole Warsaw Stock Exchange (WSE) market based on financial and economic data.</description>
    </item>
    
    <item>
      <title>Analysis of the tq_get() function</title>
      <link>/blog/analysis-of-the-tq-get-function/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/analysis-of-the-tq-get-function/</guid>
      <description>body {text-align: justify}IntroductionOne of the most important parts of any analysis including financial or economic data is getting the data. Of course it is possible to download data directly from the Internet. However, in some cases there are limitations when downloading data. For example, only last 5 years of data is available, maybe the frequency is not suited to the needs of the analysis or it is cumbersome to update data on a regular basis in the code.</description>
    </item>
    
  </channel>
</rss>